#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GlobalAsset.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GlobalAssets")]
	public partial class GlobalAssetsDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertPackage(Package instance);
    partial void UpdatePackage(Package instance);
    partial void DeletePackage(Package instance);
    partial void InsertPayout(Payout instance);
    partial void UpdatePayout(Payout instance);
    partial void DeletePayout(Payout instance);
    partial void InsertWithdrawal(Withdrawal instance);
    partial void UpdateWithdrawal(Withdrawal instance);
    partial void DeleteWithdrawal(Withdrawal instance);
    partial void InsertUserPackage(UserPackage instance);
    partial void UpdateUserPackage(UserPackage instance);
    partial void DeleteUserPackage(UserPackage instance);
    partial void InsertPasswordResetRequest(PasswordResetRequest instance);
    partial void UpdatePasswordResetRequest(PasswordResetRequest instance);
    partial void DeletePasswordResetRequest(PasswordResetRequest instance);
    #endregion
		
		public GlobalAssetsDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["GlobalAssetsConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public GlobalAssetsDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GlobalAssetsDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GlobalAssetsDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GlobalAssetsDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Package> Packages
		{
			get
			{
				return this.GetTable<Package>();
			}
		}
		
		public System.Data.Linq.Table<Payout> Payouts
		{
			get
			{
				return this.GetTable<Payout>();
			}
		}
		
		public System.Data.Linq.Table<Withdrawal> Withdrawals
		{
			get
			{
				return this.GetTable<Withdrawal>();
			}
		}
		
		public System.Data.Linq.Table<UserPackage> UserPackages
		{
			get
			{
				return this.GetTable<UserPackage>();
			}
		}
		
		public System.Data.Linq.Table<PasswordResetRequest> PasswordResetRequests
		{
			get
			{
				return this.GetTable<PasswordResetRequest>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Title;
		
		private string _Name;
		
		private string _Address;
		
		private string _Country;
		
		private string _Email;
		
		private string _Mobile;
		
		private string _Telephone;
		
		private string _UserName;
		
		private string _Password;
		
		private string _NetellerAccountEmail;
		
		private string _SkrillAccountEmail;
		
		private string _BitCoinWalletAddress;
		
		private string _ProfileImage;
		
		private System.Nullable<int> _UserType;
		
		private System.Nullable<int> _RefferedBy;
		
		private System.Nullable<System.DateTime> _SignedUpDate;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<bool> _IsMailVerified;
		
		private EntitySet<Payout> _Payouts;
		
		private EntitySet<Withdrawal> _Withdrawals;
		
		private EntitySet<UserPackage> _UserPackages;
		
		private EntitySet<PasswordResetRequest> _PasswordResetRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnNetellerAccountEmailChanging(string value);
    partial void OnNetellerAccountEmailChanged();
    partial void OnSkrillAccountEmailChanging(string value);
    partial void OnSkrillAccountEmailChanged();
    partial void OnBitCoinWalletAddressChanging(string value);
    partial void OnBitCoinWalletAddressChanged();
    partial void OnProfileImageChanging(string value);
    partial void OnProfileImageChanged();
    partial void OnUserTypeChanging(System.Nullable<int> value);
    partial void OnUserTypeChanged();
    partial void OnRefferedByChanging(System.Nullable<int> value);
    partial void OnRefferedByChanged();
    partial void OnSignedUpDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSignedUpDateChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnIsMailVerifiedChanging(System.Nullable<bool> value);
    partial void OnIsMailVerifiedChanged();
    #endregion
		
		public User()
		{
			this._Payouts = new EntitySet<Payout>(new Action<Payout>(this.attach_Payouts), new Action<Payout>(this.detach_Payouts));
			this._Withdrawals = new EntitySet<Withdrawal>(new Action<Withdrawal>(this.attach_Withdrawals), new Action<Withdrawal>(this.detach_Withdrawals));
			this._UserPackages = new EntitySet<UserPackage>(new Action<UserPackage>(this.attach_UserPackages), new Action<UserPackage>(this.detach_UserPackages));
			this._PasswordResetRequests = new EntitySet<PasswordResetRequest>(new Action<PasswordResetRequest>(this.attach_PasswordResetRequests), new Action<PasswordResetRequest>(this.detach_PasswordResetRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(1000)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(5000)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(1000)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(500)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(50)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(50)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(100)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(5000)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetellerAccountEmail", DbType="VarChar(1000)")]
		public string NetellerAccountEmail
		{
			get
			{
				return this._NetellerAccountEmail;
			}
			set
			{
				if ((this._NetellerAccountEmail != value))
				{
					this.OnNetellerAccountEmailChanging(value);
					this.SendPropertyChanging();
					this._NetellerAccountEmail = value;
					this.SendPropertyChanged("NetellerAccountEmail");
					this.OnNetellerAccountEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkrillAccountEmail", DbType="VarChar(1000)")]
		public string SkrillAccountEmail
		{
			get
			{
				return this._SkrillAccountEmail;
			}
			set
			{
				if ((this._SkrillAccountEmail != value))
				{
					this.OnSkrillAccountEmailChanging(value);
					this.SendPropertyChanging();
					this._SkrillAccountEmail = value;
					this.SendPropertyChanged("SkrillAccountEmail");
					this.OnSkrillAccountEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BitCoinWalletAddress", DbType="VarChar(1000)")]
		public string BitCoinWalletAddress
		{
			get
			{
				return this._BitCoinWalletAddress;
			}
			set
			{
				if ((this._BitCoinWalletAddress != value))
				{
					this.OnBitCoinWalletAddressChanging(value);
					this.SendPropertyChanging();
					this._BitCoinWalletAddress = value;
					this.SendPropertyChanged("BitCoinWalletAddress");
					this.OnBitCoinWalletAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileImage", DbType="VarChar(1000)")]
		public string ProfileImage
		{
			get
			{
				return this._ProfileImage;
			}
			set
			{
				if ((this._ProfileImage != value))
				{
					this.OnProfileImageChanging(value);
					this.SendPropertyChanging();
					this._ProfileImage = value;
					this.SendPropertyChanged("ProfileImage");
					this.OnProfileImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="Int")]
		public System.Nullable<int> UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefferedBy", DbType="Int")]
		public System.Nullable<int> RefferedBy
		{
			get
			{
				return this._RefferedBy;
			}
			set
			{
				if ((this._RefferedBy != value))
				{
					this.OnRefferedByChanging(value);
					this.SendPropertyChanging();
					this._RefferedBy = value;
					this.SendPropertyChanged("RefferedBy");
					this.OnRefferedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignedUpDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SignedUpDate
		{
			get
			{
				return this._SignedUpDate;
			}
			set
			{
				if ((this._SignedUpDate != value))
				{
					this.OnSignedUpDateChanging(value);
					this.SendPropertyChanging();
					this._SignedUpDate = value;
					this.SendPropertyChanged("SignedUpDate");
					this.OnSignedUpDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMailVerified", DbType="Bit")]
		public System.Nullable<bool> IsMailVerified
		{
			get
			{
				return this._IsMailVerified;
			}
			set
			{
				if ((this._IsMailVerified != value))
				{
					this.OnIsMailVerifiedChanging(value);
					this.SendPropertyChanging();
					this._IsMailVerified = value;
					this.SendPropertyChanged("IsMailVerified");
					this.OnIsMailVerifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Payout", Storage="_Payouts", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<Payout> Payouts
		{
			get
			{
				return this._Payouts;
			}
			set
			{
				this._Payouts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Withdrawal", Storage="_Withdrawals", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<Withdrawal> Withdrawals
		{
			get
			{
				return this._Withdrawals;
			}
			set
			{
				this._Withdrawals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserPackage", Storage="_UserPackages", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<UserPackage> UserPackages
		{
			get
			{
				return this._UserPackages;
			}
			set
			{
				this._UserPackages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PasswordResetRequest", Storage="_PasswordResetRequests", ThisKey="UserID", OtherKey="RequestedUserID")]
		public EntitySet<PasswordResetRequest> PasswordResetRequests
		{
			get
			{
				return this._PasswordResetRequests;
			}
			set
			{
				this._PasswordResetRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payouts(Payout entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Payouts(Payout entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Withdrawals(Withdrawal entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Withdrawals(Withdrawal entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserPackages(UserPackage entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserPackages(UserPackage entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_PasswordResetRequests(PasswordResetRequest entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_PasswordResetRequests(PasswordResetRequest entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Packages")]
	public partial class Package : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PackageID;
		
		private string _Name;
		
		private System.Nullable<int> _Investment;
		
		private System.Nullable<int> _Interest;
		
		private System.Nullable<int> _Duration;
		
		private string _PackageColor;
		
		private string _PackageLogo;
		
		private System.Nullable<bool> _PerDayPackage;
		
		private System.Nullable<double> _PerDayAmount;
		
		private string _InvestmentText;
		
		private string _SubHeading;
		
		private System.Nullable<int> _MinInvestment;
		
		private System.Nullable<int> _MaxInvestment;
		
		private EntitySet<UserPackage> _UserPackages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnInvestmentChanging(System.Nullable<int> value);
    partial void OnInvestmentChanged();
    partial void OnInterestChanging(System.Nullable<int> value);
    partial void OnInterestChanged();
    partial void OnDurationChanging(System.Nullable<int> value);
    partial void OnDurationChanged();
    partial void OnPackageColorChanging(string value);
    partial void OnPackageColorChanged();
    partial void OnPackageLogoChanging(string value);
    partial void OnPackageLogoChanged();
    partial void OnPerDayPackageChanging(System.Nullable<bool> value);
    partial void OnPerDayPackageChanged();
    partial void OnPerDayAmountChanging(System.Nullable<double> value);
    partial void OnPerDayAmountChanged();
    partial void OnInvestmentTextChanging(string value);
    partial void OnInvestmentTextChanged();
    partial void OnSubHeadingChanging(string value);
    partial void OnSubHeadingChanged();
    partial void OnMinInvestmentChanging(System.Nullable<int> value);
    partial void OnMinInvestmentChanged();
    partial void OnMaxInvestmentChanging(System.Nullable<int> value);
    partial void OnMaxInvestmentChanged();
    #endregion
		
		public Package()
		{
			this._UserPackages = new EntitySet<UserPackage>(new Action<UserPackage>(this.attach_UserPackages), new Action<UserPackage>(this.detach_UserPackages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Investment", DbType="Int")]
		public System.Nullable<int> Investment
		{
			get
			{
				return this._Investment;
			}
			set
			{
				if ((this._Investment != value))
				{
					this.OnInvestmentChanging(value);
					this.SendPropertyChanging();
					this._Investment = value;
					this.SendPropertyChanged("Investment");
					this.OnInvestmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interest", DbType="Int")]
		public System.Nullable<int> Interest
		{
			get
			{
				return this._Interest;
			}
			set
			{
				if ((this._Interest != value))
				{
					this.OnInterestChanging(value);
					this.SendPropertyChanging();
					this._Interest = value;
					this.SendPropertyChanged("Interest");
					this.OnInterestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Int")]
		public System.Nullable<int> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageColor", DbType="VarChar(1000)")]
		public string PackageColor
		{
			get
			{
				return this._PackageColor;
			}
			set
			{
				if ((this._PackageColor != value))
				{
					this.OnPackageColorChanging(value);
					this.SendPropertyChanging();
					this._PackageColor = value;
					this.SendPropertyChanged("PackageColor");
					this.OnPackageColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageLogo", DbType="VarChar(1000)")]
		public string PackageLogo
		{
			get
			{
				return this._PackageLogo;
			}
			set
			{
				if ((this._PackageLogo != value))
				{
					this.OnPackageLogoChanging(value);
					this.SendPropertyChanging();
					this._PackageLogo = value;
					this.SendPropertyChanged("PackageLogo");
					this.OnPackageLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerDayPackage", DbType="Bit")]
		public System.Nullable<bool> PerDayPackage
		{
			get
			{
				return this._PerDayPackage;
			}
			set
			{
				if ((this._PerDayPackage != value))
				{
					this.OnPerDayPackageChanging(value);
					this.SendPropertyChanging();
					this._PerDayPackage = value;
					this.SendPropertyChanged("PerDayPackage");
					this.OnPerDayPackageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerDayAmount", DbType="Float")]
		public System.Nullable<double> PerDayAmount
		{
			get
			{
				return this._PerDayAmount;
			}
			set
			{
				if ((this._PerDayAmount != value))
				{
					this.OnPerDayAmountChanging(value);
					this.SendPropertyChanging();
					this._PerDayAmount = value;
					this.SendPropertyChanged("PerDayAmount");
					this.OnPerDayAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentText", DbType="VarChar(100)")]
		public string InvestmentText
		{
			get
			{
				return this._InvestmentText;
			}
			set
			{
				if ((this._InvestmentText != value))
				{
					this.OnInvestmentTextChanging(value);
					this.SendPropertyChanging();
					this._InvestmentText = value;
					this.SendPropertyChanged("InvestmentText");
					this.OnInvestmentTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubHeading", DbType="VarChar(100)")]
		public string SubHeading
		{
			get
			{
				return this._SubHeading;
			}
			set
			{
				if ((this._SubHeading != value))
				{
					this.OnSubHeadingChanging(value);
					this.SendPropertyChanging();
					this._SubHeading = value;
					this.SendPropertyChanged("SubHeading");
					this.OnSubHeadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinInvestment", DbType="Int")]
		public System.Nullable<int> MinInvestment
		{
			get
			{
				return this._MinInvestment;
			}
			set
			{
				if ((this._MinInvestment != value))
				{
					this.OnMinInvestmentChanging(value);
					this.SendPropertyChanging();
					this._MinInvestment = value;
					this.SendPropertyChanged("MinInvestment");
					this.OnMinInvestmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxInvestment", DbType="Int")]
		public System.Nullable<int> MaxInvestment
		{
			get
			{
				return this._MaxInvestment;
			}
			set
			{
				if ((this._MaxInvestment != value))
				{
					this.OnMaxInvestmentChanging(value);
					this.SendPropertyChanging();
					this._MaxInvestment = value;
					this.SendPropertyChanged("MaxInvestment");
					this.OnMaxInvestmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_UserPackage", Storage="_UserPackages", ThisKey="PackageID", OtherKey="PackageID")]
		public EntitySet<UserPackage> UserPackages
		{
			get
			{
				return this._UserPackages;
			}
			set
			{
				this._UserPackages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserPackages(UserPackage entity)
		{
			this.SendPropertyChanging();
			entity.Package = this;
		}
		
		private void detach_UserPackages(UserPackage entity)
		{
			this.SendPropertyChanging();
			entity.Package = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payouts")]
	public partial class Payout : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PayoutID;
		
		private System.Nullable<int> _UserPackageID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ActivatedDate;
		
		private System.Nullable<double> _Amount;
		
		private string _Description;
		
		private System.Nullable<int> _UserID;
		
		private EntityRef<User> _User;
		
		private EntityRef<UserPackage> _UserPackage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPayoutIDChanging(int value);
    partial void OnPayoutIDChanged();
    partial void OnUserPackageIDChanging(System.Nullable<int> value);
    partial void OnUserPackageIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnActivatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActivatedDateChanged();
    partial void OnAmountChanging(System.Nullable<double> value);
    partial void OnAmountChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    #endregion
		
		public Payout()
		{
			this._User = default(EntityRef<User>);
			this._UserPackage = default(EntityRef<UserPackage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayoutID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PayoutID
		{
			get
			{
				return this._PayoutID;
			}
			set
			{
				if ((this._PayoutID != value))
				{
					this.OnPayoutIDChanging(value);
					this.SendPropertyChanging();
					this._PayoutID = value;
					this.SendPropertyChanged("PayoutID");
					this.OnPayoutIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPackageID", DbType="Int")]
		public System.Nullable<int> UserPackageID
		{
			get
			{
				return this._UserPackageID;
			}
			set
			{
				if ((this._UserPackageID != value))
				{
					if (this._UserPackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserPackageIDChanging(value);
					this.SendPropertyChanging();
					this._UserPackageID = value;
					this.SendPropertyChanged("UserPackageID");
					this.OnUserPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActivatedDate
		{
			get
			{
				return this._ActivatedDate;
			}
			set
			{
				if ((this._ActivatedDate != value))
				{
					this.OnActivatedDateChanging(value);
					this.SendPropertyChanging();
					this._ActivatedDate = value;
					this.SendPropertyChanged("ActivatedDate");
					this.OnActivatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Payout", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Payouts.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Payouts.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserPackage_Payout", Storage="_UserPackage", ThisKey="UserPackageID", OtherKey="UserPackageID", IsForeignKey=true)]
		public UserPackage UserPackage
		{
			get
			{
				return this._UserPackage.Entity;
			}
			set
			{
				UserPackage previousValue = this._UserPackage.Entity;
				if (((previousValue != value) 
							|| (this._UserPackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserPackage.Entity = null;
						previousValue.Payouts.Remove(this);
					}
					this._UserPackage.Entity = value;
					if ((value != null))
					{
						value.Payouts.Add(this);
						this._UserPackageID = value.UserPackageID;
					}
					else
					{
						this._UserPackageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserPackage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Withdrawals")]
	public partial class Withdrawal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WithdrawalID;
		
		private System.Nullable<System.DateTime> _RequestedDate;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<double> _Amount;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<System.DateTime> _ApprovedDate;
		
		private System.Nullable<int> _ApprovedBy;
		
		private string _PaymentType;
		
		private string _RecipientEmail;
		
		private string _TransactionID;
		
		private string _SendersEmail;
		
		private string _ReasonForDecline;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWithdrawalIDChanging(int value);
    partial void OnWithdrawalIDChanged();
    partial void OnRequestedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestedDateChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnAmountChanging(System.Nullable<double> value);
    partial void OnAmountChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnApprovedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedDateChanged();
    partial void OnApprovedByChanging(System.Nullable<int> value);
    partial void OnApprovedByChanged();
    partial void OnPaymentTypeChanging(string value);
    partial void OnPaymentTypeChanged();
    partial void OnRecipientEmailChanging(string value);
    partial void OnRecipientEmailChanged();
    partial void OnTransactionIDChanging(string value);
    partial void OnTransactionIDChanged();
    partial void OnSendersEmailChanging(string value);
    partial void OnSendersEmailChanged();
    partial void OnReasonForDeclineChanging(string value);
    partial void OnReasonForDeclineChanged();
    #endregion
		
		public Withdrawal()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithdrawalID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WithdrawalID
		{
			get
			{
				return this._WithdrawalID;
			}
			set
			{
				if ((this._WithdrawalID != value))
				{
					this.OnWithdrawalIDChanging(value);
					this.SendPropertyChanging();
					this._WithdrawalID = value;
					this.SendPropertyChanged("WithdrawalID");
					this.OnWithdrawalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RequestedDate
		{
			get
			{
				return this._RequestedDate;
			}
			set
			{
				if ((this._RequestedDate != value))
				{
					this.OnRequestedDateChanging(value);
					this.SendPropertyChanging();
					this._RequestedDate = value;
					this.SendPropertyChanged("RequestedDate");
					this.OnRequestedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovedDate
		{
			get
			{
				return this._ApprovedDate;
			}
			set
			{
				if ((this._ApprovedDate != value))
				{
					this.OnApprovedDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovedDate = value;
					this.SendPropertyChanged("ApprovedDate");
					this.OnApprovedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int")]
		public System.Nullable<int> ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType", DbType="VarChar(100)")]
		public string PaymentType
		{
			get
			{
				return this._PaymentType;
			}
			set
			{
				if ((this._PaymentType != value))
				{
					this.OnPaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._PaymentType = value;
					this.SendPropertyChanged("PaymentType");
					this.OnPaymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientEmail", DbType="VarChar(1000)")]
		public string RecipientEmail
		{
			get
			{
				return this._RecipientEmail;
			}
			set
			{
				if ((this._RecipientEmail != value))
				{
					this.OnRecipientEmailChanging(value);
					this.SendPropertyChanging();
					this._RecipientEmail = value;
					this.SendPropertyChanged("RecipientEmail");
					this.OnRecipientEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", DbType="VarChar(1000)")]
		public string TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendersEmail", DbType="VarChar(1000)")]
		public string SendersEmail
		{
			get
			{
				return this._SendersEmail;
			}
			set
			{
				if ((this._SendersEmail != value))
				{
					this.OnSendersEmailChanging(value);
					this.SendPropertyChanging();
					this._SendersEmail = value;
					this.SendPropertyChanged("SendersEmail");
					this.OnSendersEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonForDecline", DbType="VarChar(1000)")]
		public string ReasonForDecline
		{
			get
			{
				return this._ReasonForDecline;
			}
			set
			{
				if ((this._ReasonForDecline != value))
				{
					this.OnReasonForDeclineChanging(value);
					this.SendPropertyChanging();
					this._ReasonForDecline = value;
					this.SendPropertyChanged("ReasonForDecline");
					this.OnReasonForDeclineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Withdrawal", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Withdrawals.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Withdrawals.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserPackages")]
	public partial class UserPackage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserPackageID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _PackageID;
		
		private System.Nullable<System.DateTime> _RequestedDate;
		
		private System.Nullable<System.DateTime> _AcknowledgedDate;
		
		private string _PaymentType;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<double> _Amount;
		
		private string _TransactionID;
		
		private string _SendersEmail;
		
		private string _RecipientEmail;
		
		private System.Nullable<int> _AcknowledgeBy;
		
		private string _DeclineReason;
		
		private EntitySet<Payout> _Payouts;
		
		private EntityRef<Package> _Package;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserPackageIDChanging(int value);
    partial void OnUserPackageIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnPackageIDChanging(System.Nullable<int> value);
    partial void OnPackageIDChanged();
    partial void OnRequestedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestedDateChanged();
    partial void OnAcknowledgedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAcknowledgedDateChanged();
    partial void OnPaymentTypeChanging(string value);
    partial void OnPaymentTypeChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnAmountChanging(System.Nullable<double> value);
    partial void OnAmountChanged();
    partial void OnTransactionIDChanging(string value);
    partial void OnTransactionIDChanged();
    partial void OnSendersEmailChanging(string value);
    partial void OnSendersEmailChanged();
    partial void OnRecipientEmailChanging(string value);
    partial void OnRecipientEmailChanged();
    partial void OnAcknowledgeByChanging(System.Nullable<int> value);
    partial void OnAcknowledgeByChanged();
    partial void OnDeclineReasonChanging(string value);
    partial void OnDeclineReasonChanged();
    #endregion
		
		public UserPackage()
		{
			this._Payouts = new EntitySet<Payout>(new Action<Payout>(this.attach_Payouts), new Action<Payout>(this.detach_Payouts));
			this._Package = default(EntityRef<Package>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPackageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserPackageID
		{
			get
			{
				return this._UserPackageID;
			}
			set
			{
				if ((this._UserPackageID != value))
				{
					this.OnUserPackageIDChanging(value);
					this.SendPropertyChanging();
					this._UserPackageID = value;
					this.SendPropertyChanged("UserPackageID");
					this.OnUserPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int")]
		public System.Nullable<int> PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					if (this._Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RequestedDate
		{
			get
			{
				return this._RequestedDate;
			}
			set
			{
				if ((this._RequestedDate != value))
				{
					this.OnRequestedDateChanging(value);
					this.SendPropertyChanging();
					this._RequestedDate = value;
					this.SendPropertyChanged("RequestedDate");
					this.OnRequestedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcknowledgedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AcknowledgedDate
		{
			get
			{
				return this._AcknowledgedDate;
			}
			set
			{
				if ((this._AcknowledgedDate != value))
				{
					this.OnAcknowledgedDateChanging(value);
					this.SendPropertyChanging();
					this._AcknowledgedDate = value;
					this.SendPropertyChanged("AcknowledgedDate");
					this.OnAcknowledgedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType", DbType="VarChar(100)")]
		public string PaymentType
		{
			get
			{
				return this._PaymentType;
			}
			set
			{
				if ((this._PaymentType != value))
				{
					this.OnPaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._PaymentType = value;
					this.SendPropertyChanged("PaymentType");
					this.OnPaymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", DbType="VarChar(1000)")]
		public string TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendersEmail", DbType="VarChar(1000)")]
		public string SendersEmail
		{
			get
			{
				return this._SendersEmail;
			}
			set
			{
				if ((this._SendersEmail != value))
				{
					this.OnSendersEmailChanging(value);
					this.SendPropertyChanging();
					this._SendersEmail = value;
					this.SendPropertyChanged("SendersEmail");
					this.OnSendersEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientEmail", DbType="VarChar(1000)")]
		public string RecipientEmail
		{
			get
			{
				return this._RecipientEmail;
			}
			set
			{
				if ((this._RecipientEmail != value))
				{
					this.OnRecipientEmailChanging(value);
					this.SendPropertyChanging();
					this._RecipientEmail = value;
					this.SendPropertyChanged("RecipientEmail");
					this.OnRecipientEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcknowledgeBy", DbType="Int")]
		public System.Nullable<int> AcknowledgeBy
		{
			get
			{
				return this._AcknowledgeBy;
			}
			set
			{
				if ((this._AcknowledgeBy != value))
				{
					this.OnAcknowledgeByChanging(value);
					this.SendPropertyChanging();
					this._AcknowledgeBy = value;
					this.SendPropertyChanged("AcknowledgeBy");
					this.OnAcknowledgeByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclineReason", DbType="VarChar(1000)")]
		public string DeclineReason
		{
			get
			{
				return this._DeclineReason;
			}
			set
			{
				if ((this._DeclineReason != value))
				{
					this.OnDeclineReasonChanging(value);
					this.SendPropertyChanging();
					this._DeclineReason = value;
					this.SendPropertyChanged("DeclineReason");
					this.OnDeclineReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserPackage_Payout", Storage="_Payouts", ThisKey="UserPackageID", OtherKey="UserPackageID")]
		public EntitySet<Payout> Payouts
		{
			get
			{
				return this._Payouts;
			}
			set
			{
				this._Payouts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_UserPackage", Storage="_Package", ThisKey="PackageID", OtherKey="PackageID", IsForeignKey=true)]
		public Package Package
		{
			get
			{
				return this._Package.Entity;
			}
			set
			{
				Package previousValue = this._Package.Entity;
				if (((previousValue != value) 
							|| (this._Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Package.Entity = null;
						previousValue.UserPackages.Remove(this);
					}
					this._Package.Entity = value;
					if ((value != null))
					{
						value.UserPackages.Add(this);
						this._PackageID = value.PackageID;
					}
					else
					{
						this._PackageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Package");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserPackage", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserPackages.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserPackages.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payouts(Payout entity)
		{
			this.SendPropertyChanging();
			entity.UserPackage = this;
		}
		
		private void detach_Payouts(Payout entity)
		{
			this.SendPropertyChanging();
			entity.UserPackage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PasswordResetRequest")]
	public partial class PasswordResetRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RequestID;
		
		private System.Nullable<System.DateTime> _RequestedDate;
		
		private System.Nullable<System.DateTime> _AcknowledgeDate;
		
		private System.Nullable<int> _RequestStatus;
		
		private System.Nullable<int> _RequestedUserID;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequestIDChanging(int value);
    partial void OnRequestIDChanged();
    partial void OnRequestedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestedDateChanged();
    partial void OnAcknowledgeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAcknowledgeDateChanged();
    partial void OnRequestStatusChanging(System.Nullable<int> value);
    partial void OnRequestStatusChanged();
    partial void OnRequestedUserIDChanging(System.Nullable<int> value);
    partial void OnRequestedUserIDChanged();
    #endregion
		
		public PasswordResetRequest()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RequestedDate
		{
			get
			{
				return this._RequestedDate;
			}
			set
			{
				if ((this._RequestedDate != value))
				{
					this.OnRequestedDateChanging(value);
					this.SendPropertyChanging();
					this._RequestedDate = value;
					this.SendPropertyChanged("RequestedDate");
					this.OnRequestedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcknowledgeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AcknowledgeDate
		{
			get
			{
				return this._AcknowledgeDate;
			}
			set
			{
				if ((this._AcknowledgeDate != value))
				{
					this.OnAcknowledgeDateChanging(value);
					this.SendPropertyChanging();
					this._AcknowledgeDate = value;
					this.SendPropertyChanged("AcknowledgeDate");
					this.OnAcknowledgeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestStatus", DbType="Int")]
		public System.Nullable<int> RequestStatus
		{
			get
			{
				return this._RequestStatus;
			}
			set
			{
				if ((this._RequestStatus != value))
				{
					this.OnRequestStatusChanging(value);
					this.SendPropertyChanging();
					this._RequestStatus = value;
					this.SendPropertyChanged("RequestStatus");
					this.OnRequestStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedUserID", DbType="Int")]
		public System.Nullable<int> RequestedUserID
		{
			get
			{
				return this._RequestedUserID;
			}
			set
			{
				if ((this._RequestedUserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestedUserIDChanging(value);
					this.SendPropertyChanging();
					this._RequestedUserID = value;
					this.SendPropertyChanged("RequestedUserID");
					this.OnRequestedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PasswordResetRequest", Storage="_User", ThisKey="RequestedUserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.PasswordResetRequests.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.PasswordResetRequests.Add(this);
						this._RequestedUserID = value.UserID;
					}
					else
					{
						this._RequestedUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
